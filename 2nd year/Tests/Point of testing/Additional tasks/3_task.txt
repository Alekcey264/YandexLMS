Дана реализация функции is_prime(n) из предыдущей задачи, основанная на алгоритме перебора делителей:
def is_prime(n): 
    for divisor in range(2, int(n ∗∗ 0.5)): 
        if n % divisor == 0: 
            return False 
    return True
С помощью тестов из предыдущей задачи найдите и исправьте ошибки в этой реализации.

Пользуясь исправленной реализацией, напишите программу, которая считывает число из стандартного ввода и печатает в стандартный вывод YES, если число является простым и NO, если число является составным (или если понятие простоты не определено).

Примечания
Алгоритм перебора делителей, как следует из его названия, пытается найти делители числа n, меньшие его самого, путем последовательного перебора натуральных чисел 1 < i < n и проверки остатка от деления n % i. Легко доказать, что для такой проверки достаточно перебрать делители, не превосходящие квадратного корня из n. Убедимся в этом на двух примерах:
Проверим, что число 11 – простое. Нужно проверить делители 2 и 3. Действительно, 11 на них не делится. А если бы число 11 было составным, то у него было бы минимум 2 делителя, причем оба больше 3 (т.к. все меньшие делители мы уже проверили). Но это невозможно, т.к. произведение таких делителей не меньше 16.
Проверим, что число 15 – составное. Нужно проверить делители 2 и 3, и 15 делится на 3.