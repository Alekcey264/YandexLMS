Сами точки класса Point выводятся так, как было задумано, чего не скажешь о выводе списка точек.

>>> print([Point(’A’, 0, 3), Point(’B’, 4, 0)])  
    [<__main__.Point object at 0x0321CF10>, <__main__.Point object at 0x0321C290>]
Дело в том, что контейнеры при выводе своих элементов используют не метод __str__ (удобный для печати), а более строгий и формальный метод __repr__.

Конечно, мы можем определить __repr__ точно таким же образом как и __str__, но правильнее будет задать такое «официальное» представление экземпляра класса, чтобы из него можно было как можно легче (например, с помощью функции eval) и без потери информации получить обратно такой же объект (или по крайней мере максимально приближенный к исходному).

В нашем случае такое формальное строковое представление может выглядеть как создание объекта в коде: имя класса и в круглых скобках три параметра, например, Point(’A’, 1, 5). Для простоты будем считать, что кавычки и спецсимволы в именах точек встречаться не могут.

Таким образом, наша задача — реализовать метод __repr__, возвращающий строковое представление в выбранном нами формате.

Формат ввода
Каждый тест представляет собой код, в котором будет использоваться ваш класс.