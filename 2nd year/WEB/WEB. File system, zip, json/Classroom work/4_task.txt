В файле scoring.json (он будет скопирован в папку с Вашей программой) содержится информация о тестах для проверки задачи в некоторой тестирующей системе. Например, он может выглядеть так:
{ 
  "scoring": [ 
    { 
      "required_pretests": [], 
      "required_tests": [1], 
      "outcome": 1, 
      "points": 0 
    }, 
    { 
      "required_pretests": [], 
      "required_tests": [2, 3, 4], 
      "outcome": 1, 
      "points": 30 
    }, 
    { 
      "required_pretests": [], 
      "required_tests": [5, 6, 7, 8], 
      "outcome": 1, 
      "points": 40 
    }, 
    { 
      "required_pretests": [], 
      "required_tests": [9, 10], 
      "outcome": 1, 
      "points": 20 
    }, 
    { 
      "required_pretests": [], 
      "required_tests": [11], 
      "outcome": 1, 
      "points": 10 
    } 
  ] 
}
Поясним некоторые поля:

scoring – список данных, которые описывают группу тестов,
required_tests – номера тестов,
points – баллы за группу тестов (гарантируется, что они пропорциональны количеству тестов в группе)
поле outcome можно проигнорировать.

Таким образом, следующий блок

{ 
    "required_pretests": [], 
    "required_tests": [9, 10], 
    "outcome": 1, 
    "points": 20 
}
говорит о том, что за решение 9 и 10 теста система начислит 20 баллов.

Тесты в задаче нумеруются натуральными числами, начиная с 1.

Программа должна считать некоторое число строк — вердиктов тестирующей системы, каждый вердикт с новой строки. Если тест пройден, то вердикт будет ok. Кроме этого вердикта, конечно же, могут быть и другие.

За каждый пройденный тест (вердикт ok) начисляется количество баллов равное отношению количеству баллов за группу тестов к количеству тестов в группе. За не пройденный тест баллы не начисляются.

Итоговый балл представляет собой сумму баллов за все пройденные тесты.

Найдите количество баллов, которое следует выставить за решение задачи.

Формат ввода
Строки — вердикты тестирующей системы, каждый с новой строки.
Формат вывода
Искомое количество баллов — целое число.
Пример