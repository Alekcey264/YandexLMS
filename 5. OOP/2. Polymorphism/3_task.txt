Заметки могут быть самого разного характера: список покупок, список дел, маршрут движения. Но над всеми часто приходится выполнять похожие действия: вернуть все значения подряд (values()), добавить в конец (append(value)), пометить выполненным (check(value)), вернуть выполненные (checked_values()), вернуть оставшиеся (rest_values()).

Напишите три класса, которые инициализируются с произвольным количеством кортежей:

ShoppingList (Список покупок) – кортежи имеют два элемента (покупка, маркер выполнения). При добавлении покупки маркер имеет значение False.

TODOList (Список дел) – кортежи при инициализации имеют три значения: дело, срочность, маркер выполнения. При выводе и при добавлении (append(value, urgency)) все дела сортируются в порядке уменьшения срочности, в случае одинаковой порядок не меняется. При добавлении дела маркер имеет значение False.

Route (Маршрут) – кортежи состоят из трёх элементов: название остановки, время, маркер выполнения. Новую остановку можно добавить в конец списка, только если её время позже предыдущего, иначе ничего не происходит. Маркер при добавлении остановки имеет значение False.

Пример 1